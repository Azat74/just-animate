export declare function noop(): void;
export declare function clamp(val: number, min: number, max: number): number;
export declare function head<T>(indexed: ja.IIndexed<T>): T;
export declare function tail<T>(indexed: ja.IIndexed<T>): T;
export declare function isArray(a: any): boolean;
export declare function isFunction(a: any): boolean;
export declare function isNumber(a: any): boolean;
export declare function isString(a: any): boolean;
export declare function toArray<T>(indexed: ja.IIndexed<T>): T[];
export declare function each<T1>(items: ja.IIndexed<T1>, fn: ja.IConsumer<T1>): void;
export declare function max<T1>(items: ja.IIndexed<T1>, propertyName: string): any;
export declare function map<T1, T2>(items: ja.IIndexed<T1>, fn: ja.IMapper<T1, T2>): T2[];
export declare function extend(target: any, ...sources: any[]): any;
export declare function multiapply(targets: ja.IIndexed<any>, fnName: string, args: ja.IIndexed<any>, cb?: ja.ICallbackHandler): any[];
